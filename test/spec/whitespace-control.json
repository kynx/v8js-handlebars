[
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": " {{~foo~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar&lt;",
		"compileOptions": {}
	},
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": " {{~foo}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar&lt; ",
		"compileOptions": {}
	},
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": " {{foo~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": " bar&lt;",
		"compileOptions": {}
	},
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": " {{~&foo~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar<",
		"compileOptions": {}
	},
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": " {{~{foo}~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar<",
		"compileOptions": {}
	},
	{
		"description": "whitespace control",
		"it": "should strip whitespace around mustache calls",
		"template": "1\n{{foo~}} \n\n 23\n{{bar}}4",
		"data": {},
		"expected": "1\n23\n4",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " {{~#if foo~}} bar {{~/if~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " {{#if foo~}} bar {{/if~}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": " bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " {{~#if foo}} bar {{~/if}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": " bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " {{#if foo}} bar {{/if}} ",
		"data": {
			"foo": "bar<"
		},
		"expected": "  bar  ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " \n\n{{~#if foo~}} \n\nbar \n\n{{~/if~}}\n\n ",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around simple block calls",
		"template": " a\n\n{{~#if foo~}} \n\nbar \n\n{{~/if~}}\n\na ",
		"data": {
			"foo": "bar<"
		},
		"expected": " abara ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around inverse block calls",
		"template": " {{~^if foo~}} bar {{~/if~}} ",
		"data": {},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around inverse block calls",
		"template": " {{^if foo~}} bar {{/if~}} ",
		"data": {},
		"expected": " bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around inverse block calls",
		"template": " {{~^if foo}} bar {{~/if}} ",
		"data": {},
		"expected": " bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around inverse block calls",
		"template": " {{^if foo}} bar {{/if}} ",
		"data": {},
		"expected": "  bar  ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around inverse block calls",
		"template": " \n\n{{~^if foo~}} \n\nbar \n\n{{~/if~}}\n\n ",
		"data": {},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~^~}} baz {{~/if}}",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{^~}} baz {{/if}}",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo}} bar {{~^~}} baz {{~/if}}",
		"data": {
			"foo": "bar<"
		},
		"expected": " bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo}} bar {{^~}} baz {{/if}}",
		"data": {
			"foo": "bar<"
		},
		"expected": " bar ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~else~}} baz {{~/if}}",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "\n\n{{~#if foo~}} \n\nbar \n\n{{~^~}} \n\nbaz \n\n{{~/if~}}\n\n",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "\n\n{{~#if foo~}} \n\n{{{foo}}} \n\n{{~^~}} \n\nbaz \n\n{{~/if~}}\n\n",
		"data": {
			"foo": "bar<"
		},
		"expected": "bar<",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~^~}} baz {{~/if}}",
		"data": {},
		"expected": "baz",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo}} bar {{~^~}} baz {{/if}}",
		"data": {},
		"expected": "baz ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~^}} baz {{~/if}}",
		"data": {},
		"expected": " baz",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~^}} baz {{/if}}",
		"data": {},
		"expected": " baz ",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "{{#if foo~}} bar {{~else~}} baz {{~/if}}",
		"data": {},
		"expected": "baz",
		"compileOptions": {}
	},
	{
		"description": "blocks",
		"it": "should strip whitespace around complex block calls",
		"template": "\n\n{{~#if foo~}} \n\nbar \n\n{{~^~}} \n\nbaz \n\n{{~/if~}}\n\n",
		"data": {},
		"expected": "baz",
		"compileOptions": {}
	},
	{
		"description": "should strip whitespace around partials",
		"it": "should strip whitespace around partials",
		"template": "foo {{~> dude~}} ",
		"data": {},
		"expected": "foobar",
		"partials": {
			"dude": "bar"
		},
		"compileOptions": {}
	},
	{
		"description": "should strip whitespace around partials",
		"it": "should strip whitespace around partials",
		"template": "foo {{> dude~}} ",
		"data": {},
		"expected": "foo bar",
		"partials": {
			"dude": "bar"
		},
		"compileOptions": {}
	},
	{
		"description": "should strip whitespace around partials",
		"it": "should strip whitespace around partials",
		"template": "foo {{> dude}} ",
		"data": {},
		"expected": "foo bar ",
		"partials": {
			"dude": "bar"
		},
		"compileOptions": {}
	},
	{
		"description": "should strip whitespace around partials",
		"it": "should strip whitespace around partials",
		"template": "foo\n {{~> dude}} ",
		"data": {},
		"expected": "foobar",
		"partials": {
			"dude": "bar"
		},
		"compileOptions": {}
	},
	{
		"description": "should strip whitespace around partials",
		"it": "should strip whitespace around partials",
		"template": "foo\n {{> dude}} ",
		"data": {},
		"expected": "foo\n bar",
		"partials": {
			"dude": "bar"
		},
		"compileOptions": {}
	},
	{
		"description": "should only strip whitespace once",
		"it": "should only strip whitespace once",
		"template": " {{~foo~}} {{foo}} {{foo}} ",
		"data": {
			"foo": "bar"
		},
		"expected": "barbar bar ",
		"compileOptions": {}
	}
]