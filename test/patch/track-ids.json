{
    "#blockhelpermissing-should handle nesting-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#blockhelpermissing-should track contextpath for arrays-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#blockhelpermissing-should track contextpath for keys-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#each-should handle block params-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#each-should handle nesting-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#each-should track contextpath for arrays-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#each-should track contextpath for keys-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#with-should handle nesting-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "#with-should track contextpath-00": {
        "helpers": {
            "blockParams": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.ids[0] + '\\n';\n      }"
            },
            "wycats": {
                "phpstub": "function (name, options) {\n        return name + ':' + options.data.contextPath + '\\n';\n      }"
            }
        }
    },
    "partials-should invalidate context for partials with parameters-00": null,
    "partials-should pass track id for basic partial-00": null,
    "partials-should pass track id for context partial-00": null,
    "track ids-should include argument ids-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (passiveVoice, noun, options) {\n        equal(options.ids[0], 'is.a');\n        equal(options.ids[1], 'slave.driver');\n\n        return 'HELP ME MY BOSS ' + options.ids[0] + ':' + passiveVoice + ' ' + options.ids[1] + ':' + noun;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS is.a:foo slave.driver:bar"
    },
    "track ids-should include argument ids-01": null,
    "track ids-should include argument ids-02": null,
    "track ids-should include hash ids-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (options) {\n        equal(options.hashIds.bat, 'is.a');\n        equal(options.hashIds.baz, 'slave.driver');\n\n        return 'HELP ME MY BOSS ' + options.hashIds.bat + ':' + options.hash.bat + ' ' + options.hashIds.baz + ':' + options.hash.baz;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS is.a:foo slave.driver:bar"
    },
    "track ids-should include hash ids-01": null,
    "track ids-should include hash ids-02": null,
    "track ids-should not include anything without the flag-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (passiveVoice, noun, options) {\n        equal(options.ids, undefined);\n        equal(options.hashIds, undefined);\n\n        return 'success';\n      }"
            }
        },
        "expected": "success"
    },
    "track ids-should not include anything without the flag-01": null,
    "track ids-should not include anything without the flag-02": null,
    "track ids-should note ..\/ and .\/ references-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (passiveVoice, noun, thiz, thiz2, options) {\n        equal(options.ids[0], 'is.a');\n        equal(options.ids[1], '..\/slave.driver');\n        equal(options.ids[2], 'is.a');\n        equal(options.ids[3], '');\n\n        return 'HELP ME MY BOSS ' + options.ids[0] + ':' + passiveVoice + ' ' + options.ids[1] + ':' + noun;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS is.a:foo ../slave.driver:undefined"
    },
    "track ids-should note ..\/ and .\/ references-01": null,
    "track ids-should note ..\/ and .\/ references-02": null,
    "track ids-should note ..\/ and .\/ references-03": null,
    "track ids-should note ..\/ and .\/ references-04": null,
    "track ids-should note @data references-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (passiveVoice, noun, options) {\n        equal(options.ids[0], '@is.a');\n        equal(options.ids[1], '@slave.driver');\n\n        return 'HELP ME MY BOSS ' + options.ids[0] + ':' + passiveVoice + ' ' + options.ids[1] + ':' + noun;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS @is.a:foo @slave.driver:bar"
    },
    "track ids-should note @data references-01": null,
    "track ids-should note @data references-02": null,
    "track ids-should return null for constants-00": {
        "helpers": {
            "wycats": {
                "phpstub": "function (passiveVoice, noun, options) {\n        equal(options.ids[0], null);\n        equal(options.ids[1], null);\n        equal(options.hashIds.key, null);\n\n        return 'HELP ME MY BOSS ' + passiveVoice + ' ' + noun + ' ' + options.hash.key;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS 1 foo false"
    },
    "track ids-should return null for constants-01": null,
    "track ids-should return null for constants-02": null,
    "track ids-should return null for constants-03": null,
    "track ids-should return true for subexpressions-00": {
        "helpers": {
            "sub": {
                "phpstub": "function () { return 1; }"
            },
            "wycats": {
                "phpstub": "function (passiveVoice, options) {\n        equal(options.ids[0], true);\n\n        return 'HELP ME MY BOSS ' + passiveVoice;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS 1"
    },
    "track ids-should return true for subexpressions-01": null,
    "track ids-should use block param paths-00": {
        "helpers": {
            "doIt": {
                "phpstub": "function (options) {\n        var blockParams = [this.is];\n        blockParams.path = ['zomg'];\n        return options.fn(this, {blockParams: blockParams});\n      }"
            },
            "wycats": {
                "phpstub": "function (passiveVoice, noun, blah, options) {\n        equal(options.ids[0], 'zomg.a');\n        equal(options.ids[1], 'slave.driver');\n        equal(options.ids[2], 'zomg');\n\n        return 'HELP ME MY BOSS ' + options.ids[0] + ':' + passiveVoice + ' ' + options.ids[1] + ':' + noun;\n      }"
            }
        },
        "expected": "HELP ME MY BOSS zomg.a:foo slave.driver:bar"
    },
    "track ids-should use block param paths-01": null,
    "track ids-should use block param paths-02": null,
    "track ids-should use block param paths-03": null
}
